{"version":3,"sources":["components/container/RepoInfo/RepoInfo.module.scss","components/presentational/IssueList/IssueList.module.scss","components/container/RepoForm/RepoForm.module.scss","components/presentational/Header/Header.module.scss","components/presentational/Main/Main.module.scss","components/presentational/IssueLabel/IssueLabel.module.scss","components/presentational/IssueLabelsList/IssueLabelsList.module.scss","components/presentational/Avatar/Avatar.module.scss","components/presentational/Issue/Issue.module.scss","components/container/RepoForm/RepoForm.js","components/container/RepoInfo/RepoInfo.js","components/presentational/Header/Header.js","api/axiosConfig.js","api/repo.js","api/issues.js","store/action/repo.js","store/action/issues.js","store/actionCreator/repo.js","store/actionCreator/issues.js","components/presentational/Main/Main.js","store/actionCreator/index.js","components/presentational/Issue/Issue.js","components/presentational/IssueList/IssuesList.js","components/presentational/IssueLabel/IssueLabel.js","components/presentational/IssueLabelsList/IssueLabelsList.js","components/presentational/Avatar/Avatar.js","store/middleware/index.js","store/reducer/repo.js","store/reducer/issues.js","store/reducer/index.js","store/index.js","App.js","index.js"],"names":["module","exports","RepoForm","fetchRepoData","useState","owner","repo","formState","setFormState","handleChange","event","target","name","value","onSubmit","preventDefault","className","classes","form","type","onChange","RepoInfo","watch","star","fork","status","setStatus","watchCount","starCount","forkCount","fullName","avatarURL","handleStatusChange","buttonId","dataset","id","container","info","Avatar","url","alt","buttonsContainer","style","backgroundColor","onClick","data-id","Header","header","apiInstance","axios","create","baseURL","fetchRepoDetailsAPI","get","fetchRepoIssuesAPI","SET_REPO_DETAILS","SET_REPO_ISSUES","setRepoDetails","repoDetails","payload","setRepoIssues","issues","MainComponent","memo","main","mapDispatchToProps","dispatch","showLoading","Promise","all","then","repoData","issuesData","data","full_name","watchers_count","stargazers_count","forks_count","avatar_url","catch","finally","hideLoading","Main","connect","propTypes","PropTypes","object","array","func","Issue","issue","number","title","login","user","labels","state","commentCount","comments","createdAt","created_at","color","issueInfo","metaInfo","comment","IssuesList","list","map","IssueLabel","label","IssueLabelsList","src","avatar","middleware","applyMiddleware","thunk","action","combineReducers","loadingBar","loadingBarReducer","store","createStore","reducer","compose","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dc58c2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RepoInfo_container__3okLZ\",\"info\":\"RepoInfo_info__38Uws\",\"buttonsContainer\":\"RepoInfo_buttonsContainer__1w37e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"IssueList_list__1aBhn\",\"info\":\"IssueList_info__2hxly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RepoForm_form__aLXz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Phac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__9hKw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"IssueLabel_label__1tBvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"IssueLabelsList_list__3JaTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2okRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issue\":\"Issue_issue__1oy7W\",\"info\":\"Issue_info__1y73V\",\"issueInfo\":\"Issue_issueInfo__1Hy-c\",\"title\":\"Issue_title__l_6fa\",\"metaInfo\":\"Issue_metaInfo__3CFPJ\",\"comment\":\"Issue_comment__3EDh5\"};","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './RepoForm.module.scss'\r\n\r\nfunction RepoForm({ fetchRepoData }) {\r\n    const [formState, setFormState] = useState({\r\n        owner: '',\r\n        repo: '',\r\n    })\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const { owner, repo } = formState\r\n        fetchRepoData(owner, repo)\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    const { owner, repo } = formState\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.form}>\r\n            <input\r\n                type=\"text\"\r\n                value={owner}\r\n                name=\"owner\"\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={repo}\r\n                name=\"repo\"\r\n                onChange={handleChange}\r\n            />\r\n            <button type=\"submit\">Find Issues</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nRepoForm.propTypes = {\r\n    fetchRepoData: PropTypes.func.isRequired,\r\n}\r\n\r\nexport { RepoForm }\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './RepoInfo.module.scss'\r\nimport { Avatar } from 'components'\r\n\r\nfunction RepoInfo({ repo }) {\r\n    const [status, setStatus] = useState({\r\n        watch: false,\r\n        star: false,\r\n        fork: false,\r\n    })\r\n\r\n    const { watchCount, starCount, forkCount, fullName, avatarURL } = repo || {}\r\n\r\n    const { watch, star, fork } = status\r\n\r\n    function handleStatusChange(event) {\r\n        const buttonId = event.target.dataset.id\r\n        setStatus({\r\n            ...status,\r\n            [buttonId]: !status[buttonId],\r\n        })\r\n    }\r\n\r\n    return (\r\n        repo && (\r\n            <div className={classes.container}>\r\n                <div className={classes.info}>\r\n                    <Avatar url={avatarURL} alt={fullName} />\r\n                    <span>{fullName}</span>\r\n                </div>\r\n                <div className={classes.buttonsContainer}>\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: watch ? '#2c974b' : 'grey',\r\n                        }}\r\n                        onClick={handleStatusChange}\r\n                        data-id={'watch'}\r\n                    >{`Watch ${watch ? watchCount + 1 : watchCount}`}</button>\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: star ? '#2c974b' : 'grey',\r\n                        }}\r\n                        onClick={handleStatusChange}\r\n                        data-id={'star'}\r\n                    >{`Star ${star ? starCount + 1 : starCount}`}</button>\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: fork ? '#2c974b' : 'grey',\r\n                        }}\r\n                        onClick={handleStatusChange}\r\n                        data-id={'fork'}\r\n                    >{`Fork ${fork ? forkCount + 1 : forkCount}`}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nRepoInfo.propTypes = {\r\n    repo: PropTypes.object,\r\n}\r\n\r\nexport { RepoInfo }\r\n","import React from 'react'\r\nimport classes from './Header.module.scss'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <h1>Github Issues</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { Header }\r\n","import axios from 'axios'\r\n\r\nconst apiInstance = axios.create({\r\n    baseURL: 'https://api.github.com/',\r\n})\r\n\r\nexport { apiInstance }\r\n","import { apiInstance } from 'api'\r\n\r\nfunction fetchRepoDetailsAPI(owner, repo) {\r\n    return apiInstance.get(`repos/${owner}/${repo}`)\r\n}\r\n\r\nexport { fetchRepoDetailsAPI }\r\n","import { apiInstance } from 'api'\r\n\r\nfunction fetchRepoIssuesAPI(owner, repo) {\r\n    return apiInstance.get(`repos/${owner}/${repo}/issues`)\r\n}\r\n\r\nexport { fetchRepoIssuesAPI }\r\n","const SET_REPO_DETAILS = 'SET_REPO_DETAILS'\r\n\r\nexport { SET_REPO_DETAILS }\r\n","const SET_REPO_ISSUES = 'SET_REPO_ISSUES'\r\n\r\nexport { SET_REPO_ISSUES }\r\n","import { SET_REPO_DETAILS } from 'store/action'\r\n\r\n// sync action creators\r\nfunction setRepoDetails(repoDetails) {\r\n    return {\r\n        type: SET_REPO_DETAILS,\r\n        payload: repoDetails,\r\n    }\r\n}\r\n\r\nexport { setRepoDetails }\r\n","import { SET_REPO_ISSUES } from 'store/action'\r\n\r\n// sync action creators\r\nfunction setRepoIssues(issues) {\r\n    return {\r\n        type: SET_REPO_ISSUES,\r\n        payload: issues,\r\n    }\r\n}\r\n\r\nexport { setRepoIssues }\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetchRepoData } from 'store/actionCreator'\r\nimport { RepoForm, RepoInfo, IssuesList } from 'components'\r\nimport classes from './Main.module.scss'\r\n\r\nconst MainComponent = memo(function MainComponent({\r\n    fetchRepoData,\r\n    repo,\r\n    issues,\r\n}) {\r\n    return (\r\n        <main className={classes.main}>\r\n            <RepoForm fetchRepoData={fetchRepoData} />\r\n            <RepoInfo repo={repo} />\r\n            <IssuesList issues={issues} />\r\n        </main>\r\n    )\r\n})\r\n\r\nconst mapStateToProps = ({ repo, issues }) => ({\r\n    repo,\r\n    issues,\r\n})\r\n\r\nconst mapDispatchToProps = { fetchRepoData }\r\n\r\nconst Main = connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n\r\nMain.propTypes = {\r\n    repo: PropTypes.object,\r\n    issues: PropTypes.array,\r\n    fetchRepoData: PropTypes.func,\r\n}\r\n\r\nexport { Main }\r\n","import { showLoading, hideLoading } from 'react-redux-loading'\r\nimport { fetchRepoDetailsAPI, fetchRepoIssuesAPI } from 'api'\r\nimport { setRepoDetails, setRepoIssues } from 'store/actionCreator'\r\n\r\nfunction fetchRepoData(owner, repo) {\r\n    return function (dispatch) {\r\n        // showing the loading indicator\r\n        dispatch(showLoading())\r\n\r\n        Promise.all([\r\n            fetchRepoDetailsAPI(owner, repo),\r\n            fetchRepoIssuesAPI(owner, repo),\r\n        ])\r\n            .then(function handleResponse([repoData, issuesData]) {\r\n                // formatting payload for repo reducer\r\n                const {\r\n                    full_name,\r\n                    watchers_count,\r\n                    stargazers_count,\r\n                    forks_count,\r\n                    owner: { avatar_url },\r\n                } = repoData.data\r\n                const repoPayload = {\r\n                    fullName: full_name,\r\n                    watchCount: watchers_count,\r\n                    forkCount: forks_count,\r\n                    starCount: stargazers_count,\r\n                    avatarURL: avatar_url,\r\n                }\r\n\r\n                dispatch(setRepoDetails(repoPayload))\r\n                dispatch(setRepoIssues(issuesData.data))\r\n            })\r\n            .catch(function handleError() {\r\n                dispatch(setRepoDetails(null))\r\n                dispatch(setRepoIssues(null))\r\n            })\r\n            .finally(function cleanUp() {\r\n                // hiding the laoding indicator\r\n                dispatch(hideLoading())\r\n            })\r\n    }\r\n}\r\n\r\nexport * from './repo'\r\nexport * from './issues'\r\nexport { fetchRepoData }\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GoComment, GoIssueOpened, GoIssueClosed } from 'react-icons/go'\r\nimport { IssueLabelsList } from 'components'\r\nimport classes from './Issue.module.scss'\r\n\r\nconst Issue = memo(function Issue({ issue }) {\r\n    const {\r\n        number,\r\n        title,\r\n        user: { login },\r\n        labels,\r\n        state,\r\n        comments: commentCount,\r\n        created_at: createdAt,\r\n    } = issue\r\n\r\n    return (\r\n        <li className={classes.issue}>\r\n            <span className={classes.state}>\r\n                {state === 'open' ? (\r\n                    <GoIssueOpened color=\"#2c974b\" />\r\n                ) : (\r\n                    <GoIssueClosed color=\"red\" />\r\n                )}\r\n            </span>\r\n            <div className={classes.info}>\r\n                <div className={classes.issueInfo}>\r\n                    <span className={classes.title}>{title}</span>\r\n                    <IssueLabelsList labels={labels} />\r\n                </div>\r\n                <span\r\n                    className={classes.metaInfo}\r\n                >{`#${number} opened by ${login} at ${createdAt}`}</span>\r\n            </div>\r\n            {commentCount ? (\r\n                <span className={classes.comment}>\r\n                    <GoComment />\r\n                    <span>{commentCount}</span>\r\n                </span>\r\n            ) : null}\r\n        </li>\r\n    )\r\n})\r\n\r\nIssue.propTypes = {\r\n    issue: PropTypes.object,\r\n}\r\n\r\nexport { Issue }\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Issue } from 'components'\r\nimport classes from './IssueList.module.scss'\r\n\r\nconst IssuesList = memo(function IssuesList({ issues }) {\r\n    return issues ? (\r\n        <ul className={classes.list}>\r\n            {issues.map(function mapIssues(issue) {\r\n                return <Issue key={issue.id} issue={issue} />\r\n            })}\r\n        </ul>\r\n    ) : (\r\n        <p className={classes.info}>\r\n            Enter a valid owner/organization and repo and press \"Find Issues\"\r\n        </p>\r\n    )\r\n})\r\n\r\nIssuesList.propTypes = {\r\n    issues: PropTypes.array,\r\n}\r\n\r\nexport { IssuesList }\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './IssueLabel.module.scss'\r\n\r\nconst IssueLabel = memo(function IssueLabel({ name, color }) {\r\n    return (\r\n        <span\r\n            style={{\r\n                backgroundColor: `#${color}`,\r\n            }}\r\n            className={classes.label}\r\n        >\r\n            {name}\r\n        </span>\r\n    )\r\n})\r\n\r\nIssueLabel.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n}\r\n\r\nexport { IssueLabel }\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { IssueLabel } from 'components'\r\nimport classes from './IssueLabelsList.module.scss'\r\n\r\nconst IssueLabelsList = memo(function IssueLabelsList({ labels }) {\r\n    return (\r\n        labels && (\r\n            <ul className={classes.list}>\r\n                {labels.map(function mapLabel({ id, name, color }) {\r\n                    return <IssueLabel key={id} name={name} color={color} />\r\n                })}\r\n            </ul>\r\n        )\r\n    )\r\n})\r\n\r\nIssueLabelsList.propTypes = {\r\n    labels: PropTypes.array,\r\n}\r\n\r\nexport { IssueLabelsList }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './Avatar.module.scss'\r\n\r\nfunction Avatar({ url, alt }) {\r\n    return <img src={url} alt={alt} className={classes.avatar} />\r\n}\r\n\r\nAvatar.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n}\r\n\r\nexport { Avatar }\r\n","import thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nlet middleware\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware = applyMiddleware(thunk, logger)\r\n} else {\r\n    middleware = applyMiddleware(thunk)\r\n}\r\n\r\nexport default middleware\r\n","import { SET_REPO_DETAILS } from 'store/action'\r\n\r\nfunction repo(state = null, action) {\r\n    switch (action.type) {\r\n        case SET_REPO_DETAILS:\r\n            return action.payload\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default repo\r\n","import { SET_REPO_ISSUES } from 'store/action'\r\n\r\nfunction issues(state = null, action) {\r\n    switch (action.type) {\r\n        case SET_REPO_ISSUES:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default issues\r\n","import { combineReducers } from 'redux'\r\nimport { loadingBarReducer } from 'react-redux-loading'\r\nimport repo from './repo'\r\nimport issues from './issues'\r\n\r\nexport default combineReducers({\r\n    repo,\r\n    issues,\r\n    loadingBar: loadingBarReducer,\r\n})\r\n","import { createStore, compose } from 'redux'\r\nimport middleware from 'store/middleware'\r\nimport reducer from 'store/reducer'\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    {},\r\n    compose(\r\n        middleware,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : (f) => f,\r\n    ),\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport LoadingBar from 'react-redux-loading'\r\nimport { Header, Main } from 'components'\r\nimport store from 'store'\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <LoadingBar />\r\n            <Header />\r\n            <Main />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}